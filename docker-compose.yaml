version: '3'
services:
  db:
    image: postgres
    environment:
      POSTGRES_DB: devdatabase
      POSTGRES_USER: devuser
      POSTGRES_PASSWORD: devpassword
    container_name: db
    restart: always
    networks:
      - backend_network
    ports:
      - 5432:5432
    volumes:
      - /home/alchemist/postgres/data:/var/lib/postgresql/data

  auth:
    build: ./auth_backend
    container_name: auth
    links:
      - db
    ports:
      - 5000:5000
    volumes:
      - ./auth_backend:/src
    depends_on:
      - db
    networks:
      - frontend_network
      - backend_network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: frontend
    stdin_open: true
    ports:
      - 3000:3000
    volumes:
      - ./frontend:/src
    networks:
      - frontend_network

  message_queue:
    image: rabbitmq:3-management
    command: rabbitmq-server
    container_name: message_queue
    hostname: email_queue
    restart: always
    networks:
      - backend_network
    expose:
      - 5672
      - 15672
    ports:
      - 8080:15672
        #     healthcheck:
        #       # test: ["CMD", "nc", "-z", "localhost", "5672"]
        #       interval: 5s
        #       timeout: 15s
        #       retries: 1

  email_service:
    build:
      context: ./email_service
      dockerfile: Dockerfile
    container_name: email_service
    restart: on-failure
    volumes:
      - ./email_service:/src
    depends_on:
      - message_queue
    networks:
      - backend_network

networks:
  frontend_network:
  backend_network:


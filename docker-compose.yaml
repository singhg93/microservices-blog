version: '3'
services:
  db:
    image: postgres
    environment:
      POSTGRES_DB: devdatabase
      POSTGRES_USER: devuser
      POSTGRES_PASSWORD: devpassword
    container_name: db
    restart: always
    networks:
      - backend_network
        # ports:
        #   - 5432:5432
    volumes:
      - /home/alchemist/postgres/data:/var/lib/postgresql/data

  auth:
    build: ./auth_backend
    container_name: auth
    links:
      - db
        # ports:
        #   - 5000:5000
    volumes:
      - ./auth_backend:/src
    depends_on:
      - db
    networks:
      # - frontend_network
      - backend_network

  article:
    build:
      context: ./article
      dockerfile: Dockerfile
    container_name: article
    depends_on:
      - article_db
    volumes:
      - ./article:/src
    networks:
      # - frontend_network
      - backend_network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: frontend
    stdin_open: true
    ports:
      - 3000:3000
    volumes:
      - ./frontend:/src
    networks:
      - frontend_network

  message_queue:
    image: rabbitmq:3-management
    command: rabbitmq-server
    container_name: message_queue
    hostname: email_queue
    restart: always
    networks:
      - backend_network
        # expose:
        #   - 5672
        #   - 15672
        # ports:
        #   - 8080:15672

  email_service:
    build:
      context: ./email_service
      dockerfile: Dockerfile
    container_name: email_service
    restart: on-failure
    volumes:
      - ./email_service:/src
    depends_on:
      - message_queue
    networks:
      - backend_network

  article_db:
    image: mongo
    container_name: article_db
    volumes:
      - /home/alchemist/mongo/data:/data/db
        # expose:
        #   - 27017
    networks:
      - backend_network

  nginx_server:
    #build:
    #  context: ./nginx_proxy
    #  dockerfile: Dockerfile
    image: nginx
    container_name: nginx_server
    # expose:
    #   - 80
    # ports:
    #   - 80:80
    volumes:
      - ./nginx_proxy/nginx_proxy.conf:/etc/nginx/nginx.conf
    networks:
      - frontend_network
      - backend_network

networks:
  frontend_network:
  backend_network:

